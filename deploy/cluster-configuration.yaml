---
apiVersion: installer.kubesphere.io/v1alpha1
kind: ClusterConfiguration
metadata:
  name: ks-installer
  namespace: kubesphere-system
  labels:
    version: v3.1.1
spec:
  persistence:
    storageClass: ""        # If there is no default StorageClass in your cluster, you need to specify an existing StorageClass here.
  authentication:
    jwtSecret: ""           # Keep the jwtSecret consistent with the Host Cluster. Retrieve the jwtSecret by executing "kubectl -n kubesphere-system get cm kubesphere-config -o yaml | grep -v "apiVersion" | grep jwtSecret" on the Host Cluster.
  local_registry: ""        # Add your private registry address if it is needed.
  # dev_tag: ""               # Add your kubesphere image tag you want to install, by default it's same as ks-install release version.
  etcd:
    monitoring: false       # Enable or disable etcd monitoring dashboard installation. You have to create a Secret for etcd before you enable it.
    endpointIps: localhost  # etcd cluster EndpointIps. It can be a bunch of IPs here.
    port: 2379              # etcd port.
    tlsEnable: true
  affinity: {}
  tolerations: {}
  nodeSelector: {}
  common:
    # apiserver:            # Enlarge the apiserver and controller manager's resource requests and limits for the large cluster
    #  resources:
    #    limits:
    #      cpu: 1
    #      memory: 1024Mi
    #    requests:
    #      cpu: 20m
    #      memory: 100Mi
    # controllerManager:
    #  resources:
    #    limits:
    #      cpu: 1
    #      memory: 1000Mi
    #    requests:
    #      cpu: 30m
    #      memory: 50Mi
    redis:
      enabled: false
      volumeSize: 2Gi # Redis PVC size.
    openldap:
      enabled: false
      volumeSize: 2Gi   # openldap PVC size.
    minio:
      volumeSize: 20Gi # Minio PVC size.
    monitoring:
      # type: external   # Whether to specify the external prometheus stack, and need to modify the endpoint at the next line.
      endpoint: http://prometheus-operated.kubesphere-monitoring-system.svc:9090 # Prometheus endpoint to get metrics data.
      GPUMonitoring:     # Enable or disable the GPU-related metrics. If you enable this switch but have no GPU resources, Kubesphere will set it to zero. 
        enabled: false
    # gpu:                 # Install GPUKinds. The default GPU kind is nvidia.com/gpu. Other GPU kinds can be added here according to your needs. 
    #   kinds:         
    #   - resourceName: "nvidia.com/gpu"
    #     resourceType: "GPU"
    #     default: true
    #   - resourceName: "virtaitech.com/gpu"
    #     resourceType: "GPU"
    #   - resourceName: "tencent.com/vcuda-core"
    #     resourceType: "GPU"
    es:   # Storage backend for logging, events and auditing.
      # master:
      #   volumeSize: 4Gi  # The volume size of Elasticsearch master nodes.
      #   replicas: 1      # The total number of master nodes. Even numbers are not allowed.
      #   resources:
      #     limits:
      #       cpu: 2
      #       memory: 1024Mi
      #     requests:
      #       cpu: 25m
      #       memory: 512Mi
      # data:
      #   volumeSize: 20Gi  # The volume size of Elasticsearch data nodes.
      #   replicas: 1       # The total number of data nodes.
      #   resources:
      #     limits:
      #       cpu: 4
      #       memory: 2048Mi
      #     requests:
      #       cpu: 25m
      #       memory: 1536Mi
      logMaxAge: 7             # Log retention time in built-in Elasticsearch. It is 7 days by default.
      elkPrefix: logstash      # The string making up index names. The index name will be formatted as ks-<elk_prefix>-log.
      basicAuth:
        enabled: false
        username: ""
        password: ""
      externalElasticsearchUrl: ""
      externalElasticsearchPort: ""
  console:
    enableMultiLogin: true  # Enable or disable simultaneous logins. It allows different users to log in with the same account at the same time.
    port: 30880
    type: NodePort
  alerting:                # (CPU: 0.1 Core, Memory: 100 MiB) It enables users to customize alerting policies to send messages to receivers in time with different time intervals and alerting levels to choose from.
    enabled: false         # Enable or disable the KubeSphere Alerting System.
    # thanosruler:
    #   replicas: 1
    #   resources:
    #    limits:
    #      cpu: "1"
    #      memory: "1Gi"
    #    requests:
    #      cpu: "100m"
    #      memory: "100Mi"
  auditing:                # Provide a security-relevant chronological set of recordsï¼Œrecording the sequence of activities happening on the platform, initiated by different tenants.
    enabled: false         # Enable or disable the KubeSphere Auditing Log System.
    # operator:
    #   resources:
    #     limits:
    #       cpu: 200m
    #       memory: 200Mi
    #     requests:
    #       cpu: 20m
    #       memory: 20Mi
    # webhook:
    #   resources:
    #     limits:
    #       cpu: 200m
    #       memory: 500Mi
    #     requests:
    #       cpu: 20m
    #       memory: 50Mi
  devops:                  # (CPU: 0.47 Core, Memory: 8.6 G) Provide an out-of-the-box CI/CD system based on Jenkins, and automated workflow tools including Source-to-Image & Binary-to-Image.
    enabled: false             # Enable or disable the KubeSphere DevOps System.
    jenkinsMemoryLim: 2Gi      # Jenkins memory limit.
    jenkinsMemoryReq: 1500Mi   # Jenkins memory request.
    jenkinsVolumeSize: 8Gi     # Jenkins volume size.
    jenkinsJavaOpts_Xms: 512m  # The following three fields are JVM parameters.
    jenkinsJavaOpts_Xmx: 512m
    jenkinsJavaOpts_MaxRAM: 2g
  events:                  # Provide a graphical web console for Kubernetes Events exporting, filtering and alerting in multi-tenant Kubernetes clusters.
    enabled: false         # Enable or disable the KubeSphere Events System.
    # operator:
    #   resources:
    #     limits:
    #       cpu: 200m
    #       memory: 200Mi
    #     requests:
    #       cpu: 20m
    #       memory: 20Mi
    # exporter:
    #   resources:
    #     limits:
    #       cpu: 200m
    #       memory: 500Mi
    #     requests:
    #       cpu: 20m
    #       memory: 50Mi
    # ruler:
    #   enabled: true
    #   replicas: 2
    #   resources:
    #     limits:
    #       cpu: 500m
    #       memory: 500Mi
    #     requests:
    #       cpu: 50m
    #       memory: 50Mi
  logging:                 # (CPU: 57 m, Memory: 2.76 G) Flexible logging functions are provided for log query, collection and management in a unified console. Additional log collectors can be added, such as Elasticsearch, Kafka and Fluentd.
    enabled: false         # Enable or disable the KubeSphere Logging System.
    containerruntime: docker
    logsidecar:
      enabled: true
      replicas: 2
      # resources:
      #   limits:
      #     cpu: 100m
      #     memory: 100Mi
      #   requests:
      #     cpu: 10m
      #     memory: 10Mi
  metrics_server:                    # (CPU: 56 m, Memory: 44.35 MiB) It enables HPA (Horizontal Pod Autoscaler).
    enabled: false                   # Enable or disable metrics-server.
  monitoring:
    storageClass: ""                 # If there is an independent StorageClass you need for Prometheus, you can specify it here. The default StorageClass is used by default.
    # kube_rbac_proxy:
    #   resources:
    #     limits:
    #       cpu: 1
    #       memory: 100Mi
    #     requests:
    #       cpu: 10m
    #       memory: 20Mi
    # kube_state_metrics:
    #   resources:
    #     limits:
    #       cpu: 1
    #       memory: 8Gi
    #     requests:
    #       cpu: 100m
    #       memory: 150Mi
    # prometheus:
    #   replicas: 1  # Prometheus replicas are responsible for monitoring different segments of data source and providing high availability.
    #   volumeSize: 20Gi  # Prometheus PVC size.
    #   resources:
    #     limits:
    #       cpu: 4
    #       memory: 16Gi
    #     requests:
    #       cpu: 200m
    #       memory: 400Mi
    #   operator:
    #     resources:
    #       limits:
    #         cpu: 200m
    #         memory: 200Mi
    #       requests:
    #         cpu: 100m
    #         memory: 100Mi
    #   adapter:
    #     resources:
    #       limits:
    #         cpu: 600m
    #         memory: 500Mi
    #       requests:
    #         cpu: 200m
    #         memory: 250Mi
    # node_exporter:
    #   resources:
    #     limits:
    #       cpu: 1
    #       memory: 500Mi
    #     requests:
    #       cpu: 102m
    #       memory: 180Mi
    # alertmanager:
    #   replicas: 1          # AlertManager Replicas.
    #   resources:
    #     limits:
    #       cpu: 200m
    #       memory: 200Mi
    #     requests:
    #       cpu: 20m
    #       memory: 30Mi
    # notification_manager:
    #   resources:
    #     limits:
    #       cpu: 500m
    #       memory: 500Mi
    #     requests:
    #       cpu: 5m
    #       memory: 20Mi
    #   operator:
    #     resources:
    #       limits:
    #         cpu: 50m
    #         memory: 50Mi
    #       requests:
    #         cpu: 5m
    #         memory: 20Mi
    #   proxy:
    #     resources:
    #       limits:
    #         cpu: 50m
    #         memory: 50Mi
    #       requests:
    #         cpu: 5m
    #         memory: 10Mi
    gpu:                           # GPU monitoring-related plugins installation.
      nvidia_dcgm_exporter:
        enabled: false
        # resources:
        #   limits:
        #     cpu: 100m
        #     memory: 128Mi
        #   requests:
        #     cpu: 100m
        #     memory: 128Mi
  multicluster:
    clusterRole: none  # host | member | none  # You can install a solo cluster, or specify it as the Host or Member Cluster.
  network:
    networkpolicy: # Network policies allow network isolation within the same cluster, which means firewalls can be set up between certain instances (Pods).
      # Make sure that the CNI network plugin used by the cluster supports NetworkPolicy. There are a number of CNI network plugins that support NetworkPolicy, including Calico, Cilium, Kube-router, Romana and Weave Net.
      enabled: false # Enable or disable network policies.
    ippool: # Use Pod IP Pools to manage the Pod network address space. Pods to be created can be assigned IP addresses from a Pod IP Pool.
      type: none # Specify "calico" for this field if Calico is used as your CNI plugin. "none" means that Pod IP Pools are disabled.
    topology: # Use Service Topology to view Service-to-Service communication based on Weave Scope.
      type: none # Specify "weave-scope" for this field to enable Service Topology. "none" means that Service Topology is disabled.
  openpitrix: # An App Store that is accessible to all platform tenants. You can use it to manage apps across their entire lifecycle.
    store:
      enabled: false # Enable or disable the KubeSphere App Store.
  servicemesh:         # (0.3 Core, 300 MiB) Provide fine-grained traffic management, observability and tracing, and visualized traffic topology.
    enabled: false     # Base component (pilot). Enable or disable KubeSphere Service Mesh (Istio-based).
  kubeedge:          # Add edge nodes to your cluster and deploy workloads on edge nodes.
    enabled: false   # Enable or disable KubeEdge.
    cloudCore:
      nodeSelector: {"node-role.kubernetes.io/worker": ""}
      tolerations: []
      cloudhubPort: "10000"
      cloudhubQuicPort: "10001"
      cloudhubHttpsPort: "10002"
      cloudstreamPort: "10003"
      tunnelPort: "10004"
      cloudHub:
        advertiseAddress: # At least a public IP address or an IP address which can be accessed by edge nodes must be provided.
          - ""            # Note that once KubeEdge is enabled, CloudCore will malfunction if the address is not provided.
        nodeLimit: "100"
      service:
        cloudhubNodePort: "30000"
        cloudhubQuicNodePort: "30001"
        cloudhubHttpsNodePort: "30002"
        cloudstreamNodePort: "30003"
        tunnelNodePort: "30004"
    edgeWatcher:
      nodeSelector: {"node-role.kubernetes.io/worker": ""}
      tolerations: []
      edgeWatcherAgent:
        nodeSelector: {"node-role.kubernetes.io/worker": ""}
        tolerations: []
  gatekeeper:        # Provide admission policy and rule management, A validating (mutating TBA) webhook that enforces CRD-based policies executed by Open Policy Agent.
    enabled: false   # Enable or disable Gatekeeper.
    # controller_manager:
    #   resources:
    #     limits:
    #       cpu: 1000m
    #       memory: 512Mi
    #     requests:
    #       cpu: 100m
    #       memory: 256Mi
    # audit:
    #   resources:
    #     limits:
    #       cpu: 1000m
    #       memory: 512Mi
    #     requests:
    #       cpu: 100m
    #       memory: 256Mi