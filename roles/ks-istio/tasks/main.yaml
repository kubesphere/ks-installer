---
- name: servicemesh | Getting istio installation files
  copy:
    src: "{{ item }}"
    dest: "{{ kubesphere_dir }}/servicemesh"
  loop:
    - "istio"
    - "kiali"
    - "jaeger"

- name: servicemesh | Unarchive istio files
  shell: >
    ARCH=amd64 &&
    if [[ $(arch) == "aarch64*" ]]; then ARCH=arm64; fi &&
    tar -zxf {{ kubesphere_dir }}/servicemesh/istio/istio-1.16.2-linux-${ARCH}.tar.gz -C {{ kubesphere_dir }}/servicemesh/istio/

- name: servicemesh | Grant privileges to ks-installer
  shell: >
    {{ bin_dir }}/kubectl get clusterrole ks-installer -o yaml > {{ kubesphere_dir }}/servicemesh/istio/clusterroles-all.yaml && \
    cat {{ kubesphere_dir }}/servicemesh/istio/clusterroles.yaml >> {{ kubesphere_dir }}/servicemesh/istio/clusterroles-all.yaml && \
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/servicemesh/istio/clusterroles-all.yaml

- name: servicemesh | disable istio-injection
  shell: >
    {{ bin_dir }}/kubectl label ns {{ item }} istio-injection=disabled --overwrite
  loop:
    - istio-system
    - kube-system
    - kubesphere-system
    - kubesphere-devops-system
  ignore_errors: True

- name: servicemesh | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/servicemesh/{{ item.path }}/{{ item.file }}"
  with_items:
    - { path: istio, file: istio-profile.yaml }
    - { path: istio, file: istio-custom-profile.yaml }
    - { path: jaeger, file: custom-values-jaeger.yaml }
    - { path: jaeger, file: jaeger-cr.yaml }
    - { path: kiali, file: custom-values-kiali.yaml }
    - { path: kiali, file: kiali-cr.yaml }

- name: servicemesh | Checking istio old version
  shell: kubectl -n istio-system get pods -lapp=istiod,istio.io/rev=1-16-2
  register: istio_old_version_check
  failed_when: false

- import_tasks: upgrade-pre.yaml
  when:
    istio_old_version_check.stdout.find('istiod') != -1

- name: servicemesh | Merge Profile
  shell: >
    yq ea '. as $item ireduce ({}; . * $item )' {{ kubesphere_dir }}/servicemesh/istio/istio-profile.yaml
    {{ kubesphere_dir }}/servicemesh/istio/istio-custom-profile.yaml
    >  {{ kubesphere_dir }}/servicemesh/istio/profile.yaml

- name: servicemesh | Installing istiod-1.16.2
  shell: >
    {{ kubesphere_dir }}/servicemesh/istio/istio-1.16.2/bin/istioctl install -f {{ kubesphere_dir }}/servicemesh/istio/profile.yaml --set revision=1-16-2 -y
  register: istio_result
  failed_when: false
  retries: 3
  until: "'errors occurred during operation' not in istio_result.stderr"

- name: servicemesh | Show istiod installation logs
  debug:
    var: istio_result

# when install istiod-1.16.2 successful
- name: servicemesh | Change istiod-1.16.2 injector to default
  ignore_errors: true
  shell: >
    {{ bin_dir }}/kubectl patch mutatingwebhookconfigurations istio-sidecar-injector-1-16-2 --type='json' -p='[{ "op": "remove", "path": "/webhooks/1/objectSelector/matchExpressions/1" }]'
  when: "'errors occurred during operation' not in istio_result.stderr"

- import_tasks: jaeger-install.yaml

- import_tasks: kiali-install.yaml


- name: servicemesh | set servicemesh status enabled
  shell: >
    {{ bin_dir }}/kubectl patch cc ks-installer
    --type merge
    -p '{"status": {"servicemesh": {"status": "enabled", "enabledTime": "{{ lookup('pipe','date  +%Y-%m-%dT%H:%M:%S%Z') }}"}}}'
    -n kubesphere-system
  register: cc_result
  failed_when: "cc_result.stderr and 'Warning' not in cc_result.stderr"
  until: cc_result is succeeded
  retries: 5
  delay: 3
  when: "'errors occurred during operation' not in istio_result.stderr"

- name: servicemesh | set servicemesh status failed
  shell: >
    {{ bin_dir }}/kubectl patch cc ks-installer
    --type merge
    -p '{"status": {"servicemesh": {"status": "failed", "enabledTime": "{{ lookup('pipe','date  +%Y-%m-%dT%H:%M:%S%Z') }}"}}}'
    -n kubesphere-system
  register: cc_result
  failed_when: "cc_result.stderr and 'Warning' not in cc_result.stderr"
  until: cc_result is succeeded
  retries: 5
  delay: 3
  when: "'errors occurred during operation' in istio_result.stderr"