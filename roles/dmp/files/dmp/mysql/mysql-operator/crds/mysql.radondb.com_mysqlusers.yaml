
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: mysqlusers.mysql.radondb.com
spec:
  group: mysql.radondb.com
  names:
    kind: MysqlUser
    listKind: MysqlUserList
    plural: mysqlusers
    singular: mysqluser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The name of the MySQL user
      jsonPath: .spec.user
      name: UserName
      type: string
    - description: Whether the user can grant other users
      jsonPath: .spec.withGrantOption
      name: SuperUser
      type: boolean
    - description: The hosts that the user is allowed to connect from
      jsonPath: .spec.hosts
      name: Hosts
      type: string
    - description: TLS type of user
      jsonPath: .spec.tlsOptions.type
      name: TLSType
      type: string
    - description: The cluster of the user
      jsonPath: .spec.userOwner.clusterName
      name: Cluster
      type: string
    - description: The namespace of the user
      jsonPath: .spec.userOwner.nameSpace
      name: NameSpace
      type: string
    - description: The availability of the user
      jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Available
      type: string
    - description: The name of the secret object
      jsonPath: .spec.secretSelector.secretName
      name: SecretName
      priority: 1
      type: string
    - description: The key of the secret object
      jsonPath: .spec.secretSelector.secretKey
      name: SecretKey
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MysqlUser is the Schema for the users API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User.
            properties:
              hosts:
                description: Hosts is the grants hosts.
                items:
                  type: string
                minItems: 1
                type: array
              permissions:
                description: Permissions is the list of roles that user has in the
                  specified database.
                items:
                  description: UserPermission defines a UserPermission permission.
                  properties:
                    database:
                      description: Database is the grants database.
                      pattern: ^([*]|[A-Za-z0-9_]{2,26})$
                      type: string
                    privileges:
                      description: 'Privileges is the normal privileges(comma delimited,
                        such as "SELECT,CREATE"). Optional parameters can refer to:
                        https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html.'
                      items:
                        type: string
                      minItems: 1
                      type: array
                    tables:
                      description: Tables is the grants tables inside the database.
                      items:
                        type: string
                      minItems: 1
                      type: array
                  type: object
                type: array
              secretSelector:
                description: SecretSelector Contains parameters about the secret object
                  bound by user.
                properties:
                  secretKey:
                    description: SecretKey is the key of secret object.
                    type: string
                  secretName:
                    description: SecretName is the name of secret object.
                    type: string
                type: object
              tlsOptions:
                default:
                  type: NONE
                description: TLSOptions contains the TLS parameter of the MySQL user.
                  Enabling SSL/TLS will encrypt the data being sent to and from the
                  database. https://dev.mysql.com/doc/refman/5.7/en/create-user.html
                properties:
                  type:
                    default: NONE
                    description: TLS options for the client certificates
                    enum:
                    - NONE
                    - SSL
                    - X509
                    type: string
                type: object
              user:
                description: Username is the name of user to be operated. This field
                  should be immutable.
                pattern: ^[A-Za-z0-9_]{2,26}$
                type: string
              userOwner:
                description: UserOwner Contains parameters about the cluster bound
                  by user.
                properties:
                  clusterName:
                    description: ClusterName is the name of cluster.
                    type: string
                  nameSpace:
                    description: NameSpace is the nameSpace of cluster.
                    type: string
                type: object
              withGrantOption:
                default: false
                description: WithGrantOption is the flag to indicate whether the user
                  has grant option.
                type: boolean
            type: object
          status:
            description: UserStatus defines the observed state of MysqlUser.
            properties:
              allowedHosts:
                description: AllowedHosts contains the list of hosts that the user
                  is allowed to connect from.
                items:
                  type: string
                type: array
              conditions:
                description: Conditions represents the MysqlUser resource conditions
                  list.
                items:
                  description: MySQLUserCondition defines the condition struct for
                    a MysqlUser resource.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of MysqlUser condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
