{{- if (and .Values.tls.enable (empty .Values.tls.secretName)) -}}

{{- $caCertPEM := include "tls.ca" . -}}
{{- $serverCertPEM := include "server.certPEM" . -}}
{{- $serverKeyPEM := include "server.keyPEM" . -}}
{{- $clientCertPEM := include "client.certPEM" . -}}
{{- $clientKeyPEM := include "client.keyPEM" . -}}

kind: Secret
apiVersion: v1
metadata:
  name: {{ template "tls.server.secret" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mysql-cluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: mysql-tls-secret
type: Opaque
data:
  ca.crt: {{ b64enc $caCertPEM }}
  tls.crt: {{ b64enc $serverCertPEM }}
  tls.key: {{ b64enc $serverKeyPEM }}

---

kind: Secret
apiVersion: v1
metadata:
  name: {{ template "tls.client.secret" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mysql-cluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: mysql-tls-secret
type: Opaque
data:
  ca.crt: {{ b64enc $caCertPEM }}
  tls.crt: {{ b64enc $clientCertPEM }}
  tls.key: {{ b64enc $clientKeyPEM }}

{{- end }}
