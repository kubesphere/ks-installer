---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  name: anonymous
rules:
  - apiGroups:
      - openpitrix.io
    resources:
      - apps
      - apps/versions
      - categories
      - attachments
    verbs:
      - get
      - list
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - apiGroups:
      - devops.kubesphere.io
    resources:
      - s2ibinaries/file
    verbs:
      - get
  - apiGroups:
      - devops.kubesphere.io
    resources:
      - webhook
    verbs:
      - get
      - create


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  name: pre-registration
rules:
- apiGroups:
  - iam.kubesphere.io
  resources:
  - users
  verbs:
  - create
  - list

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        allowedResources := ["users","clustermembers","workspacemembers","members"]
        allowedResources[_] == input.Resource
        input.User.Name == input.Name
      }
      allow = true {
        allowedNoneResources := ["/api","/api/v1"]
        allowedNoneResources[_] == input.Path
        input.Verb == "GET"
      }
      allow = true {
        input.APIGroup == "tenant.kubesphere.io"
        input.KubernetesRequest == false
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
  name: authenticated
rules:
  - apiGroups:
      - openpitrix.io
    resources:
      - clusters/namespaces
    verbs:
      - '*'
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
    verbs:
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - registry
      - git
    verbs:
      - get
      - create
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - clusters
    verbs:
      - get
  - apiGroups:
      - '*'
    resources:
      - storageclasses
      - storageclasscapabilities
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - openpitrix.io
    resources:
      - apps
      - apps/audits
      - categories
      - attachments
      - applications
    verbs:
      - get
      - list
  - apiGroups:
      - openpitrix.io
    resources:
      - apps
      - apps/versions
      - repos
    verbs:
      - '*'
  - apiGroups:
      - monitoring.kubesphere.io
      - metering.kubesphere.io
      - monitoring.coreos.com
    resources:
      - cluster
    verbs:
      - list
  - apiGroups:
      - devops.kubesphere.io
    resources:
      - s2ibuildertemplates
      - search
      - crumbissuer
    verbs:
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - namespaces
      - services
    verbs:
      - list
  - apiGroups:
      - devops.kubesphere.io
    resources:
      - tojenkinsfile
      - tojson
      - scms/verify
      - scms/servers
      - scms/organizations
      - webhook
    verbs:
      - create
      - list
      - get
  - apiGroups:
      - alerting.kubesphere.io
    resources:
      - comment
      - metric
      - resource_type
    verbs:
      - list
  - apiGroups:
      - notification.kubesphere.io
      - alerting.kubesphere.io
    resources:
      - addresses
      - addresslists
      - comment
    verbs:
      - list
      - create

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '["role-template-manage-clusters","role-template-view-clusters","role-template-view-roles","role-template-manage-roles","role-template-view-roles","role-template-view-workspaces","role-template-manage-workspaces","role-template-manage-users","role-template-view-roles","role-template-view-users","role-template-manage-app-templates","role-template-view-app-templates","role-template-manage-platform-settings"]'
    kubesphere.io/creator: admin
  name: platform-admin
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '["role-template-view-app-templates"]'
    kubesphere.io/creator: admin
  name: platform-regular
rules: []

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"basic": "view"}'
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-basic
rules: []

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '["role-template-view-users","role-template-manage-users","role-template-view-roles","role-template-manage-roles"]'
    kubesphere.io/creator: admin
  name: users-manager
rules:
  - apiGroups:
      - '*'
    resources:
      - users
      - users/password
      - users/loginrecords
      - globalroles
    verbs:
      - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '["role-template-view-workspaces","role-template-manage-workspaces","role-template-view-users"]'
    kubesphere.io/creator: admin
  name: workspaces-manager
rules:
  - apiGroups:
      - '*'
    resources:
      - abnormalworkloads
      - quotas
      - workloads
      - volumesnapshots
      - dashboards
      - configmaps
      - endpoints
      - events
      - limitranges
      - namespaces
      - persistentvolumeclaims
      - pods
      - podtemplates
      - replicationcontrollers
      - resourcequotas
      - secrets
      - serviceaccounts
      - services
      - applications
      - controllerrevisions
      - deployments
      - replicasets
      - statefulsets
      - daemonsets
      - meshpolicies
      - cronjobs
      - jobs
      - devopsprojects
      - devops
      - 'pipelines'
      - 'pipelines/runs'
      - 'pipelines/branches'
      - 'pipelines/checkScriptCompile'
      - 'pipelines/consolelog'
      - 'pipelines/scan'
      - 'pipelines/sonarstatus'
      - 'checkCron'
      - 'credentials'
      - 'credentials/usage'
      - s2ibinaries
      - s2ibinaries/file
      - s2ibuilders
      - s2ibuildertemplates
      - s2iruns
      - events
      - ingresses
      - router
      - filters
      - pods
      - pods/log
      - pods/containers
      - namespacenetworkpolicies
      - workspacenetworkpolicies
      - networkpolicies
      - podsecuritypolicies
      - rolebindings
      - roles
      - members
      - servicepolicies
      - federatedapplications
      - federatedconfigmaps
      - federateddeployments
      - federatedingresses
      - federatedjobs
      - federatedlimitranges
      - federatednamespaces
      - federatedpersistentvolumeclaims
      - federatedreplicasets
      - federatedsecrets
      - federatedserviceaccounts
      - federatedservices
      - federatedservicestatuses
      - federatedstatefulsets
      - federatedworkspaces
      - workspaces
      - workspaceroles
      - workspacemembers
      - workspacemembers/namespaces
      - workspacemembers/devops
      - workspacerolebindings
      - groups
      - groupbindings
    verbs:
      - '*'
  - apiGroups:
      - '*'
    resources:
      - users
      - users/loginrecords
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - openpitrix.io
    resources:
      - repos
      - apps
      - apps/versions
      - categories
      - apps/audits
    verbs:
      - '*'
  - apiGroups:
      - '*'
    resources:
      - clusters
      - cluster
    verbs:
      - list


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Clusters Management
    iam.kubesphere.io/role-template-rules: '{"clusters": "view"}'
    kubesphere.io/alias-name: Clusters View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-clusters
rules:
  - apiGroups:
      - ""
      - apiextensions.k8s.io
      - app.k8s.io
      - apps
      - autoscaling
      - batch
      - config.istio.io
      - devops.kubesphere.io
      - devops.kubesphere.io
      - events.k8s.io
      - events.kubesphere.io
      - extensions
      - istio.kubesphere.io
      - jaegertracing.io
      - logging.kubesphere.io
      - metrics.k8s.io
      - monitoring.coreos.com
      - monitoring.kubesphere.io
      - metering.kubesphere.io
      - network.kubesphere.io
      - networking.istio.io
      - networking.k8s.io
      - node.k8s.io
      - rbac.istio.io
      - scheduling.k8s.io
      - security.istio.io
      - servicemesh.kubesphere.io
      - snapshot.storage.k8s.io
      - storage.k8s.io
      - storage.k8s.io
      - storage.kubesphere.io
      - resources.kubesphere.io
      - notification.kubesphere.io
      - alerting.kubesphere.io
      - cluster.kubesphere.io
      - types.kubefed.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspaces
      - workspacetemplates
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - '*'
    verbs:
      - 'GET'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-clusters"]'
    iam.kubesphere.io/module: Clusters Management
    iam.kubesphere.io/role-template-rules: '{"clusters": "manage"}'
    kubesphere.io/alias-name: Clusters Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-clusters
rules:
  - apiGroups:
      - ""
      - apiextensions.k8s.io
      - app.k8s.io
      - apps
      - autoscaling
      - batch
      - config.istio.io
      - devops.kubesphere.io
      - devops.kubesphere.io
      - events.k8s.io
      - events.kubesphere.io
      - extensions
      - istio.kubesphere.io
      - jaegertracing.io
      - logging.kubesphere.io
      - metrics.k8s.io
      - monitoring.coreos.com
      - monitoring.kubesphere.io
      - metering.kubesphere.io
      - network.kubesphere.io
      - networking.istio.io
      - networking.k8s.io
      - node.k8s.io
      - rbac.istio.io
      - scheduling.k8s.io
      - security.istio.io
      - servicemesh.kubesphere.io
      - snapshot.storage.k8s.io
      - storage.k8s.io
      - storage.k8s.io
      - storage.kubesphere.io
      - resources.kubesphere.io
      - notification.kubesphere.io
      - alerting.kubesphere.io
      - cluster.kubesphere.io
      - types.kubefed.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspaces
      - workspacetemplates
    verbs:
      - update
      - patch
  - nonResourceURLs:
      - '*'
    verbs:
      - 'GET'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"workspaces": "view"}'
    kubesphere.io/alias-name: Workspaces View
  labels:
    iam.kubesphere.io/role-template: "true"
    kubefed.io/managed: "true"
  name: role-template-view-workspaces
rules:
  - apiGroups:
      - '*'
    resources:
      - abnormalworkloads
      - quotas
      - workloads
      - volumesnapshots
      - dashboards
      - configmaps
      - endpoints
      - events
      - limitranges
      - namespaces
      - persistentvolumeclaims
      - pods
      - podtemplates
      - replicationcontrollers
      - resourcequotas
      - secrets
      - serviceaccounts
      - services
      - applications
      - controllerrevisions
      - deployments
      - replicasets
      - statefulsets
      - daemonsets
      - meshpolicies
      - cronjobs
      - jobs
      - devopsprojects
      - devops
      - pipelines
      - pipelines/runs
      - pipelines/branches
      - pipelines/checkScriptCompile
      - pipelines/consolelog
      - pipelines/scan
      - pipelines/sonarstatus
      - checkCron
      - credentials
      - credentials/usage
      - s2ibinaries
      - s2ibinaries/file
      - s2ibuilders
      - s2ibuildertemplates
      - s2iruns
      - horizontalpodautoscalers
      - events
      - ingresses
      - router
      - filters
      - pods
      - pods/log
      - pods/containers
      - namespacenetworkpolicies
      - workspacenetworkpolicies
      - networkpolicies
      - podsecuritypolicies
      - rolebindings
      - roles
      - members
      - servicepolicies
      - federatedconfigmaps
      - federateddeployments
      - federatedingresses
      - federatedjobs
      - federatedlimitranges
      - federatednamespaces
      - federatedpersistentvolumeclaims
      - federatedreplicasets
      - federatedsecrets
      - federatedserviceaccounts
      - federatedservices
      - federatedservicestatuses
      - federatedstatefulsets
      - federatedworkspaces
      - workspaces
      - workspaceroles
      - workspacemembers
      - workspacemembers/namespaces
      - workspacemembers/devops
      - workspacerolebindings
      - repos
      - repos/action
      - repos/events
      - apps
      - apps/versions
      - categories
      - apps/audits
      - workloads
      - groups
      - groupbindings
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - monitoring.kubesphere.io
      - monitoring.coreos.com
      - metering.kubesphere.io
    resources:
      - '*'
    verbs:
      - list
      - get
  - apiGroups:
      - '*'
    resources:
      - clusters
      - cluster
    verbs:
      - list

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-workspaces"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"workspaces": "manage"}'
    kubesphere.io/alias-name: Workspaces Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-workspaces
rules:
  - apiGroups:
      - '*'
    resources:
      - abnormalworkloads
      - quotas
      - workloads
      - volumesnapshots
      - dashboards
      - configmaps
      - endpoints
      - events
      - limitranges
      - namespaces
      - persistentvolumeclaims
      - podtemplates
      - replicationcontrollers
      - resourcequotas
      - secrets
      - serviceaccounts
      - services
      - applications
      - controllerrevisions
      - deployments
      - replicasets
      - statefulsets
      - daemonsets
      - meshpolicies
      - cronjobs
      - jobs
      - devopsprojects
      - devops
      - pipelines
      - pipelines/runs
      - pipelines/branches
      - pipelines/checkScriptCompile
      - pipelines/consolelog
      - pipelines/scan
      - pipelines/sonarstatus
      - checkCron
      - credentials
      - credentials/usage
      - s2ibinaries
      - s2ibinaries/file
      - s2ibuilders
      - s2ibuildertemplates
      - s2iruns
      - horizontalpodautoscalers
      - events
      - ingresses
      - router
      - filters
      - pods
      - pods/log
      - pods/containers
      - namespacenetworkpolicies
      - workspacenetworkpolicies
      - networkpolicies
      - podsecuritypolicies
      - rolebindings
      - roles
      - members
      - servicepolicies
      - federatedapplications
      - federatedconfigmaps
      - federateddeployments
      - federatedingresses
      - federatedjobs
      - federatedlimitranges
      - federatednamespaces
      - federatedpersistentvolumeclaims
      - federatedreplicasets
      - federatedsecrets
      - federatedserviceaccounts
      - federatedservices
      - federatedservicestatuses
      - federatedstatefulsets
      - federatedworkspaces
      - workspaces
      - workspaceroles
      - workspacemembers
      - workspacemembers/namespaces
      - workspacemembers/devops
      - workspacerolebindings
      - repos
      - repos/action
      - repos/events
      - apps
      - apps/versions
      - categories
      - apps/audits
      - workloads
    verbs:
      - '*'
  - apiGroups:
      - '*'
    resources:
      - clusters
    verbs:
      - list


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"users": "view"}'
    kubesphere.io/alias-name: Users View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-users
rules:
  - apiGroups:
      - '*'
    resources:
      - users
      - users/loginrecords
    verbs:
      - get
      - list
      - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-users","role-template-view-roles"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"users": "manage"}'
    kubesphere.io/alias-name: Users Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-users
rules:
  - apiGroups:
      - '*'
    resources:
      - users
      - users/password
      - users/loginrecords
    verbs:
      - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-users"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
    kubesphere.io/alias-name: Roles View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-roles
rules:
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - globalroles
    verbs:
      - get
      - list
      - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-roles"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
    kubesphere.io/alias-name: Roles Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-roles
rules:
  - apiGroups:
      - '*'
    resources:
      - globalroles
    verbs:
      - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
    kubesphere.io/alias-name: App Templates View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-app-templates
rules:
  - apiGroups:
      - openpitrix.io
    resources:
      - apps
      - apps/versions
      - categories
    verbs:
      - get
      - list

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-app-templates"]'
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-templates": "manage"}'
    kubesphere.io/alias-name: App Templates Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-app-templates
rules:
  - apiGroups:
      - openpitrix.io
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Platform Settings
    iam.kubesphere.io/role-template-rules: '{"platform-settings": "manage"}'
    kubesphere.io/alias-name: Platform Settings Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-platform-settings
rules:
  - apiGroups:
      - logging.kubesphere.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - notification.kubesphere.io
    resources:
      - '*'
    verbs:
      - '*'