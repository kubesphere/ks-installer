---

- name: KubeSphere | Getting K8S Token
  shell: >
    {{ bin_dir }}/kubectl -n kubesphere-system get secrets $({{ bin_dir }}/kubectl -n kubesphere-system get sa kubesphere -o jsonpath='{.secrets[0].name}') -o jsonpath='{.data.token}' | base64 -d
  register: k8s_token
  tags:
    - upgrade

- name: KubeSphere | Getting OP Secret
  shell: "cat {{ kubesphere_dir }}/openpitrix/kubernetes/iam-config/secret-key.txt"
  register: op_secret
  tags:
    - upgrade

- name: KubeSphere | Setting op_secret
  set_fact: 
    op_secret_str: "{{ op_secret.stdout }}"
  tags:
    - upgrade

- name: KubeSphere | Setting ks_token
  set_fact: 
    k8s_token_str: "{{ k8s_token.stdout }}"
  tags:
    - upgrade

- name: KubeSphere | Enable Token Script
  file:
    path: "{{ kubesphere_dir }}/ks-init/jwt.sh"
    mode: 0755
  tags:
    - upgrade

- name: KubeSphere | Getting OP Token
  shell: >
    /bin/bash {{ kubesphere_dir }}/ks-init/jwt.sh  {{ op_secret_str }} '{"sub": "system","role": "global_admin","iat": 1516239022,"exp": 1816239022}'
  register: op_token
  tags:
    - upgrade

- name: KubeSphere | Getting KS Token
  shell: >
    /bin/bash {{ kubesphere_dir }}/ks-init/jwt.sh  {{ op_secret_str }} '{"email": "admin@kubesphere.io","exp": 1816239022,"username": "admin"}'
  register: ks_token
  tags:
    - upgrade

- name: KubeSphere | Setting op_token
  set_fact: 
    op_token_str: "{{ op_token.stdout }}"
  tags:
    - upgrade

- name: KubeSphere | Setting ks_token
  set_fact: 
    ks_token_str: "{{ ks_token.stdout }}"
  tags:
    - upgrade

- name: KubeSphere | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/ks-init/{{ item.file }}"
  with_items:
    - { name: ks-account-init, file: ks-account-init.yaml, type: init }
    - { name: ks-apigateway-init, file: ks-apigateway-init.yaml, type: init }
    - { name: alerting-db-init-job, file: alerting-db-init-job.yaml, type: init }
    - { name: custom-values-istio-init, file: custom-values-istio-init.yaml, type: values }
  tags:
    - upgrade

- name: KubeSphere | Checking ks-alerting db-init-job
  shell: "{{ bin_dir }}/kubectl get job -n kubesphere-alerting-system"
  register: result
  tags:
    - upgrade

- name: KubeSphere | Delete ks-alerting db-init-job
  shell: "{{ bin_dir }}/kubectl -n kubesphere-alerting-system delete jobs.batch alerting-db-init-job" 
  when: result.stdout.find("alerting-db-init-job") != -1
  tags:
    - upgrade

- name: KubeSphere | Init KubeSphere
  shell: "{{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/ks-init/{{ item }}" 
  loop:
    - "ks-account-init.yaml"
    - "ks-apigateway-init.yaml"
    - "alerting-db-init-job.yaml"
  register: import
  failed_when: "import.stderr and 'AlreadyExists' not in import.stderr"
  tags:
    - upgrade

- name: KubeSphere | Init istio-system
  shell: >
    {{ bin_dir }}/helm upgrade --install istio-init {{ kubesphere_dir }}/ks-init/istio-init-1.1.0.tgz 
    -f {{ kubesphere_dir }}/ks-init/custom-values-istio-init.yaml 
    --namespace istio-system
  when:
    - istio_enable == true