apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: ks-apiserver
    tier: backend
    version: advanced-2.0.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ks-apiserver
      tier: backend
      version: advanced-2.0.0
  template:
    metadata:
      labels:
        app: ks-apiserver
        tier: backend
        version: advanced-2.0.0
    spec:
      initContainers:
      - name: wait-mysql
        image: {{ busybox_repo }}:{{ busybox_tag }}
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z kubesphere-db.kubesphere-system.svc 3306; do echo "waiting for mysql"; sleep 2; done;']
      containers:
      - command:
        - ks-apiserver
        - --logtostderr=true
        image: {{ ks_apiserver_repo }}:{{ ks_apiserver_tag }}
        imagePullPolicy: {{ ks_image_pull_policy }}
        name: ks-apiserver
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: {{ ks_apiserver_cpu_limit }}
            memory: {{ ks_apiserver_memory_limit }}
          requests:
            cpu: {{ ks_apiserver_cpu_requests }}
            memory: {{ ks_apiserver_memory_requests }}
        volumeMounts:
        - mountPath: /etc/kubernetes/pki
          name: ca-dir
        - mountPath: /var/run/docker.sock
          name: docker-sock
        - mountPath: /etc/kubesphere/ingress-controller
          name: ks-router-config
        - mountPath: /etc/kubesphere/rules
          name: policy-rules
        - mountPath: /etc/kubesphere/
          name: kubesphere-config
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: CriticalAddonsOnly
          operator: Exists
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ks-apiserver
              namespaces:
              - kubesphere-system
              topologyKey: kubernetes.io/hostname
            weight: 100
      volumes:
      - name: ca-dir
        secret:
          defaultMode: 420
          secretName: kubesphere-ca
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: docker-sock
      - configMap:
          defaultMode: 420
          name: ks-router-config
        name: ks-router-config
      - configMap:
          defaultMode: 420
          name: policy-rules
        name: policy-rules
      - configMap:
          defaultMode: 420
          name: kubesphere-config
        name: kubesphere-config


---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-apiserver
  labels:
    app: ks-apiserver
    tier: backend
    version: advanced-2.0.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    app: ks-apiserver
    tier: backend
    version: advanced-2.0.0
  type: ClusterIP
