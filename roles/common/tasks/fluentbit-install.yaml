- name: KubeSphere | Getting fluentbit installation files
  copy:
    src: "fluentbit-operator"
    dest: "{{ kubesphere_dir }}/"

- name: ks-logging | Getting Kubernetes Node info
  shell: |
    kubectl get node -ojson | jq '.items[0].status.nodeInfo.containerRuntimeVersion'
  register: node_container_runtime


- name: ks-logging | Setting container runtime of kubernetes
  set_fact:
    logging_container_runtime: "{{ node_container_runtime.stdout is search('docker://') | ternary('docker', 'containerd') }}"

- name: ks-logging | Setting container runtime of kubernetes
  set_fact:
    logging_container_runtime: "{{ node_container_runtime.stdout is search('containerd://') | ternary('containerd', 'crio') }}"
  when: logging_container_runtime == 'containerd'

- name: ks-logging | Debug container_runtime
  debug:
    msg: "{{node_container_runtime}}"

- name: ks-logging | Debug logging_container_runtime
  debug:
    msg: "{{logging_container_runtime}}"

- name: KubeSphere | Creating custom manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/fluentbit-operator/{{ item.path }}/{{ item.file }}"
  with_items:
    - { path: fluentbit, file: custom-fluentbit-fluentBit.yaml }
    - { path: init, file: custom-fluentbit-operator-deployment.yaml }


# Upgrade or install fluentbit operator
- name: KubeSphere | Preparing fluentbit operator setup
  shell: >
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/fluentbit-operator/init


- name: KubeSphere | Deploying new fluentbit operator
  shell: >
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/fluentbit-operator/fluentbit
  register: fluentbit_result
  until: fluentbit_result is succeeded
  retries: 5
  delay: 3


# Update clusterconfig (cc) status
- name: KubeSphere | Importing fluentbit status
  shell: >
    {{ bin_dir }}/kubectl patch cc ks-installer
    --type merge
    -p '{"status": {"fluentbit": {"status": "enabled", "enabledTime": "{{ lookup('pipe','date  +%Y-%m-%dT%H:%M:%S%Z') }}"}}}'
    -n kubesphere-system
  register: cc_result
  failed_when: "cc_result.stderr and 'Warning' not in cc_result.stderr"
  until: cc_result is succeeded
  retries: 5
  delay: 3