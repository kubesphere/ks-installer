- name: ks-events | Creates directory
  file:
    path: "{{ kubesphere_dir }}/fluentbit-operator"
    state: directory


- name: ks-events | Getting Kubernetes Node info
  shell: |
    kubectl get node -ojson | jq '.items[0].status.nodeInfo.containerRuntimeVersion'
  register: node_container_runtime


- name: ks-events | Setting container runtime of kubernetes
  set_fact:
    logging_container_runtime: "{{ node_container_runtime.stdout is search('docker://') | ternary('docker', 'containerd') }}"

- name: ks-events | Setting container runtime of kubernetes
  set_fact:
    logging_container_runtime: "{{ node_container_runtime.stdout is search('containerd://') | ternary('containerd', 'crio') }}"
  when: logging_container_runtime == 'containerd'

- name: ks-events | Debug logging_container_runtime
  debug:
    msg: "{{logging_container_runtime}}"

- name: ks-events | Creating es manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/fluentbit-operator/{{ item.file }}"
  with_items:
    - { name: custom-output-elasticsearch-events, file: custom-output-elasticsearch-events.yaml }
    - { name: custom-input-events, file: custom-input-events.yaml }
    - { name: custom-filter-events, file: custom-filter-events.yaml }
  when: "common.es is defined and common.es.enabled is defined and common.es.enabled"

- name: ks-events | Creating opensearch manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/fluentbit-operator/{{ item.file }}"
  with_items:
    - { name: custom-output-opensearch-events, file: custom-output-opensearch-events.yaml }
    - { name: custom-input-events, file: custom-input-events.yaml }
    - { name: custom-filter-events, file: custom-filter-events.yaml }
  when: "common.opensearch is defined and common.opensearch.enabled is defined and common.opensearch.enabled"

- name: ks-events | Apply fluentbit operator custom resources
  shell: >
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/fluentbit-operator
