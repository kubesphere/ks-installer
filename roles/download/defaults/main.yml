---
local_release_dir: /tmp/releases

# Used to only evaluate vars from download role
skip_downloads: false

# if this is set to true will only download files once. Doesn't work
# on Container Linux by CoreOS unless the download_localhost is true and localhost
# is running another OS type. Default compress level is 1 (fastest).
download_run_once: False
download_compress: 1

# if this is set to true will download container
download_container: True

# if this is set to true, uses the localhost for download_run_once mode
# (requires docker and sudo to access docker). You may want this option for
# local caching of docker images or for Container Linux by CoreOS cluster nodes.
# Otherwise, uses the first node in the kube-master group to store images
# in the download_run_once mode.
download_localhost: False

# Always pull images if set to True. Otherwise check by the repo's tag/digest.
download_always_pull: False

# Some problems may occur when downloading files over https proxy due to ansible bug
# https://github.com/ansible/ansible/issues/32750. Set this variable to False to disable
# SSL validation of get_url module. Note that kubespray will still be performing checksum validation.
download_validate_certs: True

# Use the first kube-master if download_localhost is not set
download_delegate: "{% if download_localhost %}localhost{% else %}{{groups['kube-master'][0]}}{% endif %}"

# Arch of Docker images and needed packages
image_arch: "{{host_architecture | default('amd64')}}"

# Versions
ks_version: 2.1.0
kube_version: v1.15.5
etcd_version: v3.2.18
# kube image repo define
ks_image_repo: >-
  {% if local_registry is defined -%}
  {{ local_registry }}
  {%- else -%}
  dockerhub.qingcloud.com
  {%- endif %}

base_repo: >-
  {% if local_registry is defined -%}
  {{ local_registry }}/
  {%- else -%}

  {%- endif %}

base_library_repo: >-
  {% if local_registry is defined -%}
  {{ local_registry }}/library/
  {%- else -%}

  {%- endif %}

# quay image repo define
quay_image_repo: >-
  {% if local_registry is defined -%}
  {{ local_registry }}
  {%- else -%}
  quay.azk8s.cn
  {%- endif %}

# elastic image repo define
elastic_image_repo: >-
  {% if local_registry is defined -%}
  {{ local_registry }}
  {%- else -%}
  docker.elastic.co
  {%- endif %}

# gcr and kubernetes image repo define
gcr_image_repo: >-
  {% if local_registry is defined -%}
  {{ local_registry }}
  {%- else -%}
  gcr.azk8s.cn
  {%- endif %}
kube_image_repo: "{{ gcr_image_repo }}/google-containers"


ks_image_tag: "{{ dev_tag | default('latest') }}"

# Containers
# In some cases, we need a way to set --registry-mirror or --insecure-registry for docker,
# it helps a lot for local private development or bare metal environment.
# So you need define --registry-mirror or --insecure-registry, and modify the following url address.
# example:
# You need to deploy kubernetes cluster on local private development.
# Also provide the address of your own private registry.
# And use --insecure-registry options for docker

hyperkube_image_repo: "{{ base_repo }}kubesphere/hyperkube"
hyperkube_image_tag: "{{ kube_version }}"

#KubeSphere:
ks_apiserver_repo: "{{ base_repo }}kubesphere/ks-apiserver"
ks_apiserver_tag: v2.1.1
ks_account_repo: "{{ base_repo }}kubesphere/ks-account"
ks_account_tag: v2.1.1
ks_apigateway_repo: "{{ base_repo }}kubesphere/ks-apigateway"
ks_apigateway_tag: v2.1.1
ks_controller_manager_repo: "{{ base_repo }}kubesphere/ks-controller-manager"
ks_controller_manager_tag: v2.1.1
ks_update_repo: "{{ base_repo }}kubesphere/ks-upgrade"
ks_update_tag: "advanced-2.0.0"
ks_devops_flyway_repo: "{{ base_repo }}kubesphere/ks-devops"
ks_devops_flyway_tag: "flyway-v2.1.0"
ks_console_repo: "{{ base_repo }}kubesphere/ks-console"
ks_console_tag: v2.1.1
ks_kubectl_repo: "{{ base_repo }}kubesphere/kubectl"
ks_kubectl_tag: v1.0.0
ks_docs_repo: "{{ base_repo }}kubesphere/ks-docs"
ks_docs_tag: "advanced-2.0.2"
ks_devops_repo: "{{ base_repo }}kubesphere/ks-devops"
ks_devops_tag: advanced-2.0.0-dev
cloud_controller_manager_repo: "{{ base_repo }}kubesphere/cloud-controller-manager"
cloud_controller_manager_tag: v1.4.0

ks_image_pull_policy: IfNotPresent
#ks_image_pull_policy: Always

#ks-hostnic
ks_hostnic_repo: "kubesphere/hostnic"
ks_hostnic_tag: "v1.0.0-alpha"

#ks-installer
ks_installer_repo: "{{ base_repo }}kubesphere/ks-installer"
ks_installer_tag: v2.1.1

#ks-notification
notification_flyway_repo: "{{ base_repo }}kubesphere/notification"
notification_flyway_tag: "flyway_v2.1.0"
notification_repo: "{{ base_repo }}kubesphere/notification"
notification_tag: "v2.1.0"
alerting_dbinit_repo: "{{ base_repo }}kubesphere/alerting-dbinit"
alerting_dbinit_tag: "v2.1.0"
ks_alerting_repo: "{{ base_repo }}kubesphere/alerting"
ks_alerting_tag: "v2.1.0"
ks_alerting_adapter_repo: "{{ base_repo }}kubesphere/alert_adapter"
ks_alerting_adapter_tag: "v2.1.0"

#openpitrix:
# op_version: "latest"
op_version: "v0.4.8"
openpitrix_repo: "{{ base_repo }}openpitrix/openpitrix"
openpitrix_tag: "{{ op_version }}"
openpitrix_flyway_repo: "{{ base_repo }}openpitrix/openpitrix"
# openpitrix_flyway_tag: "flyway"
openpitrix_flyway_tag: "flyway-v0.4.8"
openpitrix_runtime_provider_kubernetes_repo: "{{ base_repo }}openpitrix/runtime-provider-kubernetes"
# openpitrix_runtime_provider_kubernetes_tag: "latest"
openpitrix_runtime_provider_kubernetes_tag: "v0.1.3"
release_app_repo: "{{ base_repo }}openpitrix/release-app"
release_app_tag: v0.4.3
minio_repo: "{{ base_repo }}minio/minio"
minio_tag: RELEASE.2019-08-07T01-59-21Z

#qingcloud-csi:
csi_provisioner_repo: "{{ base_repo }}quay.azk8s.cn/k8scsi/csi-provisioner"
csi_provisioner_tag: v1.4.0
csi_attacher_repo: "{{ base_repo }}quay.azk8s.cn/k8scsi/csi-attacher"
csi_attacher_tag: v2.0.0
csi_qingcloud_repo: "{{ base_repo }}csiplugin/csi-qingcloud"
csi_qingcloud_tag: v1.1.0
driver_registrar_repo: "{{ base_repo }}quay.azk8s.cn/k8scsi/csi-node-driver-registrar"
driver_registrar_tag: v1.2.0
csi_snapshotter_repo: "{{ base_repo }}quay.azk8s.cn/k8scsi/csi-snapshotter"
csi_snapshotter_tag: v1.2.2
csi_resizer_repo: "{{ base_repo }}quay.azk8s.cn/k8scsi/csi-resizer"
csi_resizer_tag: v0.2.0

#neonsan-csi
neonsan_driver_registrar_repo: "{{ ks_image_repo }}/k8scsi/driver-registrar"
neonsan_driver_registrar_tag: v0.4.1
csi_neonsan_repo: "{{ ks_image_repo }}/csiplugin/csi-neonsan"
csi_neonsan_tag: v0.3.0
neonsan_csi_provisioner_repo: "{{ ks_image_repo }}/k8scsi/csi-provisioner"
neonsan_csi_provisioner_tag: v0.4.1
neonsan_csi_attacher_repo: "{{ ks_image_repo }}/k8scsi/csi-attacher"
neonsan_csi_attacher_tag: v0.4.1
neonsan_csi_snapshotter_repo: "{{ ks_image_repo }}/k8scsi/csi-snapshotter"
neonsan_csi_snapshotter_tag: v0.4.1

#alicloud-csi
alicloud_csi_driver_registrar_repo: registry.cn-hangzhou.aliyuncs.com/acs/csi-node-driver-registrar
alicloud_csi_driver_registrar_tag: v1.1.0
alicloud_csi_provisioner_repo: registry.cn-hangzhou.aliyuncs.com/acs/csi-provisioner
alicloud_csi_provisioner_tag: v1.2.0
alicloud_csi_diskplugin_repo: registry.cn-hangzhou.aliyuncs.com/acs/csi-diskplugin
alicloud_csi_diskplugin_tag: v1.14.5-3068245

#tencentcloud-csi
tencentcloud_csi_driver_registrar_repo: quay.azk8s.cn/k8scsi/csi-node-driver-registrar
tencentcloud_csi_driver_registrar_tag: v1.0.2
tencentcloud_csi_provisioner_repo: quay.azk8s.cn/k8scsi/csi-provisioner
tencentcloud_csi_provisioner_tag: v1.0.1
tencentcloud_csi_attacher_repo: quay.azk8s.cn/k8scsi/csi-attacher
tencentcloud_csi_attacher_tag: v1.0.1
tencentcloud_csi_snapshotter_repo: quay.azk8s.cn/k8scsi/csi-snapshotter
tencentcloud_csi_snapshotter_tag: v1.0.1
tencentcloud_csi_cbs_repo: ccr.ccs.tencentyun.com/library/csi-tencentcloud-cbs
tencentcloud_csi_cbs_tag: v1.0.0

#harbor:
harbor_version: "v1.9.1"
nginx_photon_repo: "{{ base_repo }}goharbor/nginx-photon"
nginx_photon_tag: "{{ harbor_version }}"
chartmuseum_photon_repo: "{{ base_repo }}goharbor/chartmuseum-photon"
chartmuseum_photon_tag: "v0.9.0-{{ harbor_version }}"
notary_server_photon_repo: "{{ base_repo }}goharbor/notary-server-photon"
notary_server_photon_tag: "v0.6.1-{{ harbor_version }}"
harbor_registryctl_repo: "{{ base_repo }}goharbor/harbor-registryctl"
harbor_registryctl_tag: "{{ harbor_version }}"
registry_photon_repo: "{{ base_repo }}goharbor/registry-photon"
registry_photon_tag: "v2.7.1-patch-2819-2553-{{ harbor_version }}"
harbor_jobservice_repo: "{{ base_repo }}goharbor/harbor-jobservice"
harbor_jobservice_tag: "{{ harbor_version }}"
harbor_portal_repo: "{{ base_repo }}goharbor/harbor-portal"
harbor_portal_tag: "{{ harbor_version }}"
harbor_db_repo: "{{ base_repo }}goharbor/harbor-db"
harbor_db_tag: "{{ harbor_version }}"
clair_photon_repo: "{{ base_repo }}goharbor/clair-photon"
clair_photon_tag: "v2.0.9-{{ harbor_version }}"
notary_signer_photon_repo: "{{ base_repo }}goharbor/notary-signer-photon"
notary_signer_photon_tag: "v0.6.1-{{ harbor_version }}"
redis_photon_repo: "{{ base_repo }}goharbor/redis-photon"
redis_photon_tag: "{{ harbor_version }}"
harbor_core_repo: "{{ base_repo }}goharbor/harbor-core"
harbor_core_tag: "{{ harbor_version }}"

#jenkins:
jenkins_uc_repo:  "{{ base_repo }}kubesphere/jenkins-uc"
jenkins_uc_tag: v2.1.1
jenkins_repo: "{{ base_repo }}jenkins/jenkins"
jenkins_tag: 2.176.2
jnlp_slave_repo: "{{ base_repo }}jenkins/jnlp-slave"
jnlp_slave_tag: 3.27-1
builder_base_repo: "{{ base_repo }}kubesphere/builder-base"
builder_base_tag: v2.1.0
builder_nodejs_repo: "{{ base_repo }}kubesphere/builder-nodejs"
builder_nodejs_tag: v2.1.0
builder_maven_repo: "{{ base_repo }}kubesphere/builder-maven"
builder_maven_tag: v2.1.0
builder_go_repo: "{{ base_repo }}kubesphere/builder-go"
builder_go_tag: v2.1.0

#sonarqube:
sonarqube_repo: "{{ base_library_repo }}sonarqube"
sonarqube_tag: 7.4-community

#s2i
s2ioperator_repo: "{{ base_repo }}kubesphere/s2ioperator"
s2ioperator_tag: "v2.1.1"
s2irun_repo: "{{ base_repo }}kubesphere/s2irun"
s2irun_tag: "v2.1.1"

s2itemplates_tag: v2.1.0
binary_repo: "{{ base_repo }}kubesphere/s2i-binary"
tomcat85_java11_repo: "{{ base_repo }}kubesphere/tomcat85-java11-centos7"
tomcat85_java11_runtime_repo: "{{ base_repo }}kubesphere/tomcat85-java11-runtime"
tomcat85_java8_repo: "{{ base_repo }}kubesphere/tomcat85-java8-centos7"
tomcat85_java8_runtime_repo: "{{ base_repo }}kubesphere/tomcat85-java8-runtime"
java11centos7_repo: "{{ base_repo }}kubesphere/java-11-centos7"
java8centos7_repo: "{{ base_repo }}kubesphere/java-8-centos7"
java8_runtime_repo: "{{ base_repo }}kubesphere/java-8-runtime"
java11_runtime_repo: "{{ base_repo }}kubesphere/java-11-runtime"
nodejs8centos7_repo: "{{ base_repo }}kubesphere/nodejs-8-centos7"
nodejs6centos7_repo: "{{ base_repo }}kubesphere/nodejs-6-centos7"
nodejs4centos7_repo: "{{ base_repo }}kubesphere/nodejs-4-centos7"
python36centos7_repo: "{{ base_repo }}kubesphere/python-36-centos7"
python35centos7_repo: "{{ base_repo }}kubesphere/python-35-centos7"
python34centos7_repo: "{{ base_repo }}kubesphere/python-34-centos7"
python27centos7_repo: "{{ base_repo }}kubesphere/python-27-centos7"

#gitlab:
gitlab_version: 12.4.1
gitaly_repo: "{{ base_repo }}mirrorgitlabcontainers/gitaly"
gitaly_tag: v12-3-4
gitlab_rails_ce_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-rails-ce"
gitlab_shell_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-shell"
gitlab_shell_tag: v12-3-4
gitlab_sidekiq_ce_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-sidekiq-ce"
gitlab_runner_repo: "{{ base_repo }}gitlab/gitlab-runner"
gitlab_runner_tag: alpine-v10.3.0
gitlab_task_runner_ce_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-task-runner-ce"
gitlab_unicorn_ce_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-unicorn-ce"
gitlab_workhorse_ce_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-workhorse-ce"
gitlab_kubectl_repo: "{{ base_repo }}mirrorgitlabcontainers/kubectl"
gitlab_kubectl_tag: v1.12.10
gitlab_mailroom_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-mailroom"
gitlab_mailroom_tag: 0.9.1
gitlab_redis_ha_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-redis-ha"
gitlab_redis_ha_tag: 732704f18e34ba469df34b10c3b2465e0469d484
gitlab_exporter_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-exporter"
gitlab_exporter_tag: 5.0.1
redis_exporter_repo: "{{ base_repo }}oliver006/redis_exporter"
redis_exporter_tag: v0.34.1-alpine
postgres_exporter_repo: "{{ base_repo }}wrouesnel/postgres_exporter"
postgres_exporter_tag: v0.1.1
alpine_certificates_repo: "{{ base_repo }}mirrorgitlabcontainers/alpine-certificates"
alpine_certificates_tag: 20171114-r3
cfssl_self_sign_repo: "{{ base_repo }}mirrorgitlabcontainers/cfssl-self-sign"
cfssl_self_sign_tag: "1.2"
gitlab_operator_repo: "{{ base_repo }}mirrorgitlabcontainers/gitlab-operator"
gitlab_operator_tag: v0.7
mc_repo: "{{ base_repo }}minio/mc"
mc_tag: RELEASE.2019-08-07T23-14-43Z
registry_repo: "{{ base_library_repo }}registry"
registry_tag: 2.7.1
gitlab_busybox_tag: 1.31.1

#ks-monitor:
configmap_reload_repo: "{{ base_repo }}kubesphere/configmap-reload"
configmap_reload_tag: v0.3.0
prometheus_repo: "{{ base_repo }}kubesphere/prometheus"
prometheus_tag: v2.5.0
prometheus_config_reloader_repo: "{{ base_repo }}kubesphere/prometheus-config-reloader"
prometheus_config_reloader_tag: v0.34.0
prometheus_operator_repo: "{{ base_repo }}kubesphere/prometheus-operator"
prometheus_operator_tag: v0.34.0
kube_rbac_proxy_repo: "{{ base_repo }}kubesphere/kube-rbac-proxy"
kube_rbac_proxy_tag: v0.4.1
kube_state_metrics_repo: "{{ base_repo }}kubesphere/kube-state-metrics"
kube_state_metrics_tag: v1.7.2
node_exporter_repo: "{{ base_repo }}kubesphere/node-exporter"
node_exporter_tag: ks-v0.16.0
addon_resizer_repo: "{{ base_repo }}kubesphere/addon-resizer"
addon_resizer_tag: 1.8.4
prometheus_adapter_repo: "{{ base_repo }}kubesphere/k8s-prometheus-adapter-amd64"
prometheus_adapter_tag: v0.4.1
grafana_repo: "{{ base_repo }}grafana/grafana"
grafana_tag: 5.2.4

#ks-logger
docker_elasticsearch_curator_repo: "{{ base_repo }}kubesphere/elasticsearch-curator"
docker_elasticsearch_curator_tag: v5.7.6
elasticsearch_oss_repo: "{{ base_repo }}kubesphere/elasticsearch-oss"
elasticsearch_oss_tag: 6.7.0-1
kibana_oss_repo: "{{ elastic_image_repo }}/kibana/kibana-oss"
kibana_oss_tag: 6.7.0
testFramework_repo: "{{ base_repo }}dduportal/bats"
testFramework_tag: 0.4.0
fluentbit_operator_repo: "{{ base_repo }}kubesphere/fluentbit-operator"
fluentbit_operator_tag: v0.1.0
docker_repo: "{{ base_library_repo }}docker"
docker_tag: 19.03
ks_fluent_bit_repo: "{{ base_repo }}kubesphere/fluent-bit"
ks_fluent_bit_tag: "v1.3.5-reload"
kslogging_configmap_reload_repo: "{{ base_repo }}kubesphere/configmap-reload"
kslogging_configmap_reload_tag: v0.0.1
ks_log_sidecar_injector_repo: "{{ base_repo }}kubesphere/log-sidecar-injector"
ks_log_sidecar_injector_tag: 1.0

#ingress:
nginx_ingress_controller_repo: "{{ base_repo }}kubesphere/nginx-ingress-controller"
nginx_ingress_controller_tag: 0.24.1
defaultbackend_repo: "{{ base_repo }}mirrorgooglecontainers/defaultbackend-amd64"
defaultbackend_tag: 1.4

#metrics:
metrics_server_repo: "{{ base_repo }}kubesphere/metrics-server-amd64"
metrics_server_tag: v0.3.1

#istio
istio_hub: "{{ base_repo }}istio"
istio_tag: 1.4.8
istio_kubectl_image: kubectl
istio_proxy_init_image: proxyv2
istio_proxyv2_image: proxyv2
istio_security_image: citadel
istio_pilot_image: pilot
istio_mixer_image: mixer
istio_galleyr_image: galley
istio_sidecar_injector_image: sidecar_injector
istio_node_agent_image: node-agent-k8s
jaeger_operator_repo: "{{ base_repo }}jaegertracing/jaeger-operator"
jaeger_operator_tag: 1.17.1
jaeger_agent_repo: "{{ base_repo }}jaegertracing/jaeger-agent"
jaeger_agent_tag: 1.17
jaeger_collector_repo: "{{ base_repo }}jaegertracing/jaeger-collector"
jaeger_collector_tag: 1.17
jaeger_query_repo: "{{ base_repo }}jaegertracing/jaeger-query"
jaeger_query_tag: 1.17

#base:
redis_repo: "{{ base_library_repo }}redis"
redis_tag: 5.0.5-alpine
haproxy_repo:  "{{ base_library_repo }}haproxy"
haproxy_tag: 2.0.4
busybox_repo: "{{ base_library_repo }}alpine"
busybox_tag: 3.10.4
etcd_image_repo: "{{ base_repo }}kubesphere/etcd"
etcd_image_tag: "{{ etcd_version }}{%- if image_arch != 'amd64' -%}-{{ image_arch }}{%- endif -%}"
mysql_repo: "{{ base_library_repo }}mysql"
mysql_tag: 8.0.11
xtrabackup_repo: "{{ base_repo }}googlecontainer/xtrabackup"
xtrabackup_tag: 1.0
nginx_repo: "{{ base_library_repo }}nginx"
nginx_tag: 1.14-alpine
postgres_repo: "{{ base_library_repo }}postgres"
postgres_tag: 9.6.8   #Notice
openldap_repo: "{{ base_repo }}osixia/openldap"
openldap_tag: 1.3.0
wget_repo: "{{ base_repo }}joosthofman/wget"
wget_tag: 1.0

#NFS:
nfs_client_provisioner_repo: "{{ base_repo }}kubesphere/nfs-client-provisioner"
nfs_client_provisioner_tag: v3.1.0-k8s1.11
nfs_server_provisioner_repo: "{{ ks_image_repo }}/kubernetes_incubator/nfs-provisioner"
nfs_server_provisioner_tag: v1.0.9

#openebs
openebs_provisioner_localpv_repo: "{{ base_repo }}kubesphere/provisioner-localpv"
openebs_provisioner_localpv_tag: 1.1.0
openebs_openebs_tools_repo: "{{ base_repo }}kubesphere/openebs-tools"
openebs_openebs_tools_tag: 3.8
openebs_node_disk_manager_amd64_repo: "{{ base_repo }}kubesphere/node-disk-manager-amd64"
openebs_node_disk_manager_amd64_tag: v0.4.1
openebs_node_disk_operator_amd64_repo: "{{ base_repo }}kubesphere/node-disk-operator-amd64"
openebs_node_disk_operator_amd64_tag: v0.4.1
openebs_linux_utils_repo: "{{ base_repo }}kubesphere/linux-utils"
openebs_linux_utils_tag: 3.9

#VPA:
vpa_version: 0.5.0
vpa_admission_controller_repo: dockerhub.qingcloud.com/google_containers/vpa-admission-controller
vpa_admission_controller_tag: "{{ vpa_version }}"
vpa_recommender_repo: dockerhub.qingcloud.com/google_containers/vpa-recommender
vpa_recommender_tag: "{{ vpa_version }}"
vpa_updater_repo: dockerhub.qingcloud.com/google_containers/vpa-updater
vpa_updater_tag: "{{ vpa_version }}"

#examples-bookinfo
examples_bookinfo_version: 1.13.0
bookinfo_productpage_v1_repo: "{{ base_repo }}kubesphere/examples-bookinfo-productpage-v1"
bookinfo_productpage_v1_tag: "{{ examples_bookinfo_version }}"
bookinfo_reviews_v1_repo: "{{ base_repo }}kubesphere/examples-bookinfo-reviews-v1"
bookinfo_reviews_v1_tag: "{{ examples_bookinfo_version }}"
bookinfo_reviews_v2_repo: "{{ base_repo }}kubesphere/examples-bookinfo-reviews-v2"
bookinfo_reviews_v2_tag: "{{ examples_bookinfo_version }}"
bookinfo_details_v1_repo: "{{ base_repo }}kubesphere/examples-bookinfo-details-v1"
bookinfo_details_v1_tag: "{{ examples_bookinfo_version }}"
bookinfo_ratings_v1_repo: "{{ base_repo }}kubesphere/examples-bookinfo-ratings-v1"
bookinfo_ratings_v1_tag: "{{ examples_bookinfo_version }}"


#wave-scope
waveworks_scop_repo: "{{ base_repo }}weaveworks/scope"
waveworks_scop_tag: "1.13.0"




downloads:

  ks_installer:
    enabled: true
    container: true
    repo: "{{ks_installer_repo }}"
    tag: "{{ ks_installer_tag }}"
    sha256: "{{ ks_installer|default(None) }}"
    groups:
      - k8s-cluster

  busybox:
    enabled: true
    container: true
    repo: "{{ busybox_repo }}"
    tag: "{{ busybox_tag }}"
    sha256: "{{ busybox_checksum|default(None) }}"
    groups:
      - k8s-cluster

  mysql:
    enabled: true
    container: true
    repo: "{{ mysql_repo }}"
    tag: "{{ mysql_tag }}"
    sha256: "{{ mysql_checksum|default(None) }}"
    groups:
      - k8s-cluster

#  xtrabackup:
#    enabled: true
#    container: true
#    repo: "{{ xtrabackup_repo }}"
#    tag: "{{ xtrabackup_tag }}"
#    sha256: "{{ xtrabackup_checksum|default(None) }}"
#    groups:
#      - k8s-cluster

  redis:
    enabled: true
    container: true
    repo: "{{ redis_repo }}"
    tag: "{{ redis_tag }}"
    sha256: "{{ redis_checksum|default(None) }}"
    groups:
      - k8s-cluster

  haproxy:
    enabled: true
    container: true
    repo: "{{ haproxy_repo }}"
    tag: "{{ haproxy_tag }}"
    sha256: "{{ haproxy_checksum|default(None) }}"
    groups:
      - k8s-cluster

  nginx:
    enabled: "true"
    container: true
    repo: "{{ nginx_repo }}"
    tag: "{{ nginx_tag }}"
    sha256: "{{ nginx_checksum|default(None) }}"
    groups:
      - kube-node

  metrics_server:
    enabled: "{{ metrics_server_enabled }}"
    container: true
    repo: "{{ metrics_server_repo }}"
    tag: "{{ metrics_server_tag }}"
    sha256: "{{ metrics_server_checksum|default(None) }}"
    groups:
      - kube-node

  postgres:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ postgres_repo }}"
    tag: "{{ postgres_tag }}"
    sha256: "{{ postgres_checksum|default(None) }}"
    groups:
      - kube-node

  alerting_dbinit:
    enabled: "{{ alerting_enabled }}"
    container: true
    repo: "{{ alerting_dbinit_repo }}"
    tag: "{{ alerting_dbinit_tag }}"
    sha256: "{{ alerting_dbinit_checksum|default(None) }}"
    groups:
      - kube-node

  ks_apiserver:
    enabled: true
    container: true
    repo: "{{ ks_apiserver_repo }}"
    tag: "{{ ks_apiserver_tag }}"
    sha256: "{{ ks_apiserver_checksum|default(None) }}"
    groups:
      - kube-master

  ks_devops_flyway:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ ks_devops_flyway_repo }}"
    tag: "{{ ks_devops_flyway_tag }}"
    sha256: "{{ ks_devops_flyway_checksum|default(None) }}"
    groups:
      - kube-node

  ks_console:
    enabled: true
    container: true
    repo: "{{ ks_console_repo }}"
    tag: "{{ ks_console_tag }}"
    sha256: "{{ ks_console_checksum|default(None) }}"
    groups:
      - kube-master

  ks_account:
    enabled: true
    container: true
    repo: "{{ ks_account_repo }}"
    tag: "{{ ks_account_tag }}"
    sha256: "{{ ks_account_checksum|default(None) }}"
    groups:
      - kube-master

  ks_apigateway:
    enabled: true
    container: true
    repo: "{{ ks_apigateway_repo }}"
    tag: "{{ ks_apigateway_tag }}"
    sha256: "{{ ks_apigateway_checksum|default(None) }}"
    groups:
      - kube-master

  openldap:
    enabled: true
    container: true
    repo: "{{ openldap_repo }}"
    tag: "{{ openldap_tag }}"
    sha256: "{{ openldap_checksum|default(None) }}"
    groups:
      - k8s-cluster

  jenkins_uc:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ jenkins_uc_repo }}"
    tag: "{{ jenkins_uc_tag }}"
    sha256: "{{ jenkins_uc_checksum|default(None) }}"
    groups:
      - kube-node

  jenkins:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ jenkins_repo }}"
    tag: "{{ jenkins_tag }}"
    sha256: "{{ jenkins_checksum|default(None) }}"
    groups:
      - kube-node

  csi_provisioner:
    enabled: "{{ qingcloud_csi_enabled | default(false) }}"
    container: true
    repo: "{{ csi_provisioner_repo }}"
    tag: "{{ csi_provisioner_tag }}"
    sha256: "{{ csi_provisioner_checksum|default(None) }}"
    groups:
      - kube-node

  csi_attacher:
    enabled: "{{ qingcloud_csi_enabled | default(false) }}"
    container: true
    repo: "{{ csi_attacher_repo }}"
    tag: "{{ csi_attacher_tag }}"
    sha256: "{{ csi_attacher_checksum|default(None) }}"
    groups:
      - kube-node

  csi_qingcloud:
    enabled: "{{ qingcloud_csi_enabled | default(false) }}"
    container: true
    repo: "{{ csi_qingcloud_repo }}"
    tag: "{{ csi_qingcloud_tag }}"
    sha256: "{{ csi_qingcloud_checksum|default(None) }}"
    groups:
      - kube-node

  driver_registrar:
    enabled: "{{ qingcloud_csi_enabled | default(false) }}"
    container: true
    repo: "{{ driver_registrar_repo }}"
    tag: "{{ driver_registrar_tag }}"
    sha256: "{{ driver_registrar_checksum|default(None) }}"
    groups:
      - kube-node

  csi_snapshotter:
    enabled: "{{ qingcloud_csi_enabled | default(false) }}"
    container: true
    repo: "{{ csi_snapshotter_repo }}"
    tag: "{{ csi_snapshotter_tag }}"
    sha256: "{{ csi_snapshotter_checksum|default(None) }}"
    groups:
      - kube-node

  csi_resizer:
    enabled: "{{ qingcloud_csi_enabled | default(false) }}"
    container: true
    repo: "{{ csi_resizer_repo }}"
    tag: "{{ csi_resizer_tag }}"
    sha256: "{{ csi_resizer_checksum|default(None) }}"
    groups:
      - kube-node

  neonsan_driver_registrar:
    enabled: "{{ neonsan_csi_enabled | default(false) }}"
    container: true
    repo: "{{ neonsan_driver_registrar_repo }}"
    tag: "{{ neonsan_driver_registrar_tag }}"
    sha256: "{{ neonsan_driver_registrar_checksum|default(None) }}"
    groups:
      - kube-node

  csi_neonsan:
    enabled: "{{ neonsan_csi_enabled | default(false) }}"
    container: true
    repo: "{{ csi_neonsan_repo }}"
    tag: "{{ csi_neonsan_tag }}"
    sha256: "{{ csi_neonsan_checksum|default(None) }}"
    groups:
      - kube-node

  neonsan_csi_provisioner:
    enabled: "{{ neonsan_csi_enabled | default(false) }}"
    container: true
    repo: "{{ neonsan_csi_provisioner_repo }}"
    tag: "{{ neonsan_csi_provisioner_tag }}"
    sha256: "{{ neonsan_csi_provisioner_checksum|default(None) }}"
    groups:
      - kube-node

  neonsan_csi_attacher:
    enabled: "{{ neonsan_csi_enabled | default(false) }}"
    container: true
    repo: "{{ neonsan_csi_attacher_repo }}"
    tag: "{{ neonsan_csi_attacher_tag }}"
    sha256: "{{ neonsan_csi_attacher_checksum|default(None) }}"
    groups:
      - kube-node

  neonsan_csi_snapshotter:
    enabled: "{{ neonsan_csi_enabled | default(false) }}"
    container: true
    repo: "{{ neonsan_csi_snapshotter_repo }}"
    tag: "{{ neonsan_csi_snapshotter_tag }}"
    sha256: "{{ neonsan_csi_snapshotter_checksum|default(None) }}"
    groups:
      - kube-node

  nfs_client_provisioner:
    enabled: "{{ nfs_client_enabled }}"
    container: true
    repo: "{{ nfs_client_provisioner_repo }}"
    tag: "{{ nfs_client_provisioner_tag }}"
    sha256: "{{ nfs_client_provisioner_checksum|default(None) }}"
    groups:
      - kube-node

  jnlp_slave:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ jnlp_slave_repo }}"
    tag: "{{ jnlp_slave_tag }}"
    sha256: "{{ jnlp_slave_checksum|default(None) }}"
    groups:
      - kube-node

  builder_base:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ builder_base_repo }}"
    tag: "{{ builder_base_tag }}"
    sha256: "{{ builder_base_checksum|default(None) }}"
    groups:
      - kube-node

  builder_nodejs:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ builder_nodejs_repo }}"
    tag: "{{ builder_nodejs_tag }}"
    sha256: "{{ builder_nodejs_checksum|default(None) }}"
    groups:
      - kube-node

  builder_maven:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ builder_maven_repo }}"
    tag: "{{ builder_maven_tag }}"
    sha256: "{{ builder_maven_checksum|default(None) }}"
    groups:
      - kube-node

  builder_go:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ builder_go_repo }}"
    tag: "{{ builder_go_tag }}"
    sha256: "{{ builder_go_checksum|default(None) }}"
    groups:
      - kube-node

  istio_kubectl:
    enabled: "{{ servicemesh_enabled }}"
    container: true
    repo: "{{ istio_hub }}/{{ istio_kubectl_image }}"
    tag: "{{ istio_tag }}"
    sha256: "{{ istio_kubectl_checksum|default(None) }}"
    groups:
      - kube-node

  istio_sidecar_injector:
    enabled: "{{ servicemesh_enabled }}"
    container: true
    repo: "{{ istio_hub }}/{{ istio_sidecar_injector_image }}"
    tag: "{{ istio_tag }}"
    sha256: "{{ istio_sidecar_injector_checksum|default(None) }}"
    groups:
      - kube-node

  sonarqube:
    enabled: "{{ devops_enabled }}"
    container: true
    repo: "{{ sonarqube_repo }}"
    tag: "{{ sonarqube_tag }}"
    sha256: "{{ sonarqube_checksum|default(None) }}"
    groups:
      - kube-node

  fluentbit_operator:
    enabled: "{{ logging_enabled }}"
    container: true
    repo: "{{ fluentbit_operator_repo }}"
    tag: "{{ fluentbit_operator_tag }}"
    sha256: "{{ fluentbit_operator|default(None) }}"
    groups:
      - kube-node

  vpa_admission_controller:
    enabled: false
    container: true
    repo: "{{ vpa_admission_controller_repo }}"
    tag: "{{ vpa_admission_controller_tag }}"
    sha256: "{{ vpa_admission_controller|default(None) }}"
    groups:
      - kube-node

  vpa_recommender:
    enabled: false
    container: true
    repo: "{{ vpa_recommender_repo }}"
    tag: "{{ vpa_recommender_tag }}"
    sha256: "{{ vpa_recommender|default(None) }}"
    groups:
      - kube-node

  vpa_updater:
    enabled: false
    container: true
    repo: "{{ vpa_updater_repo }}"
    tag: "{{ vpa_updater_tag }}"
    sha256: "{{ vpa_updater|default(None) }}"
    groups:
      - kube-node
      -
  openebs_provisioner:
    enabled: true
    container: true
    repo: "{{ openebs_provisioner_localpv_repo }}"
    tag: "{{ openebs_provisioner_localpv_tag }}"
    sha256: "{{ openebs_provisioner|default(None) }}"
    groups:
      - kube-cluster

  openebs_openebs_tools:
    enabled: true
    container: true
    repo: "{{ openebs_openebs_tools_repo }}"
    tag: "{{ openebs_openebs_tools_tag }}"
    sha256: "{{ openebs_openebs_tools|default(None) }}"
    groups:
      - kube-cluster

  openebs_node_disk_manager_amd64:
    enabled: true
    container: true
    repo: "{{ openebs_node_disk_manager_amd64_repo }}"
    tag: "{{ openebs_node_disk_manager_amd64_tag }}"
    sha256: "{{ openebs_node_disk_manager_amd64|default(None) }}"
    groups:
      - kube-cluster

  openebs_node_disk_operator_amd64:
    enabled: true
    container: true
    repo: "{{ openebs_node_disk_operator_amd64_repo }}"
    tag: "{{ openebs_node_disk_operator_amd64_tag }}"
    sha256: "{{ openebs_node_disk_operator_amd64|default(None) }}"
    groups:
      - kube-cluster

  openebs_linux_utils:
    enabled: true
    container: true
    repo: "{{ openebs_linux_utils_repo }}"
    tag: "{{ openebs_linux_utils_tag }}"
    sha256: "{{ openebs_linux_utils|default(None) }}"
    groups:
      - kube-cluster

  nginx_photon:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ nginx_photon_repo }}"
    tag: "{{ nginx_photon_tag }}"
    sha256: "{{ nginx_photon|default(None) }}"
    groups:
      - kube-node

  chartmuseum_photon:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ chartmuseum_photon_repo }}"
    tag: "{{ chartmuseum_photon_tag }}"
    sha256: "{{ chartmuseum_photon|default(None) }}"
    groups:
      - kube-node

  notary_server_photon:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ notary_server_photon_repo }}"
    tag: "{{ notary_server_photon_tag }}"
    sha256: "{{ notary_server_photon|default(None) }}"
    groups:
      - kube-node

  harbor_registryctl:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ harbor_registryctl_repo }}"
    tag: "{{ harbor_registryctl_tag }}"
    sha256: "{{ harbor_registryctl|default(None) }}"
    groups:
      - kube-node

  registry_photon:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ registry_photon_repo }}"
    tag: "{{ registry_photon_tag }}"
    sha256: "{{ registry_photon|default(None) }}"
    groups:
      - kube-node

  harbor_jobservice:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ harbor_jobservice_repo }}"
    tag: "{{ harbor_jobservice_tag }}"
    sha256: "{{ harbor_jobservice|default(None) }}"
    groups:
      - kube-node

  harbor_portal:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ harbor_portal_repo }}"
    tag: "{{ harbor_portal_tag }}"
    sha256: "{{ harbor_portal|default(None) }}"
    groups:
      - kube-node

  harbor_db:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ harbor_db_repo }}"
    tag: "{{ harbor_db_tag }}"
    sha256: "{{ harbor_db|default(None) }}"
    groups:
      - kube-node

  clair_photon:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ clair_photon_repo }}"
    tag: "{{ clair_photon_tag }}"
    sha256: "{{ clair_photon|default(None) }}"
    groups:
      - kube-node

  notary_signer_photon:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ notary_signer_photon_repo }}"
    tag: "{{ notary_signer_photon_tag }}"
    sha256: "{{ notary_signer_photon|default(None) }}"
    groups:
      - kube-node

  redis_photon:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ redis_photon_repo }}"
    tag: "{{ redis_photon_tag }}"
    sha256: "{{ redis_photon|default(None) }}"
    groups:
      - kube-node

  harbor_core:
    enabled: "{{ harbor_enabled | default(false) }}"
    container: true
    repo: "{{ harbor_core_repo }}"
    tag: "{{ harbor_core_tag }}"
    sha256: "{{ harbor_core|default(None) }}"
    groups:
      - kube-node
      


download_defaults:
  container: false
  file: false
  repo: None
  tag: None
  enabled: false
  dest: None
  version: None
  url: None
  unarchive: false
  owner: kube
  mode: None
