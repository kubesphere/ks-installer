---
- name: ks-logging | Checking elasticsearch-logging
  shell: >
    {{ bin_dir }}/helm list | grep "elasticsearch-logging" | grep "elasticsearch-1.10.2"
  register: check_es_result
  ignore_errors: True
  tags:
    - elasticsearch


- name: ks-logging | Remove old elasticsearch
  shell: "{{ bin_dir }}/helm del --purge elasticsearch-logging"
  when: 
    - check_es_result.stdout.find("kubesphere-logging-system") != -1
  ignore_errors: True
  tags:
    - elasticsearch


- name: ks-logging | Getting logging installation files
  copy:
    src: "logging"
    dest: "{{ kubesphere_dir }}/"


- name: ks-logging | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/logging/{{ item.file }}"
  with_items:
    - { path: logging, file: custom-values-elasticsearch.yaml }
    - { path: logging, file: custom-values-elasticsearch-curator.yaml }
    - { path: logging, file: custom-values-kibana.yaml }
    - { path: logging, file: custom-values-fluentbit-operator.yaml }
    - { path: logging, file: custom-values-elasticsearch-plugins.yaml }
    - { path: logging, file: fluentbit-crd.yaml }
    - { path: logging, file: fluent-bit-outputs.template }
    - { path: logging, file: FluentBitCrd.py }
    - { path: logging, file: FluentBitOutputsConfig.py }


- name: ks-logging | Checking elasticsearch-logging-data-svc
  shell: >
    {{ bin_dir }}/kubectl get svc -n kubesphere-logging-system
  register: elasticsearch_logging_data_svc
  ignore_errors: True


- name: ks-logging | Checking kubesphere-version
  shell: >
    {{ bin_dir }}/kubectl describe  configmap -n kubesphere-system ks-console-ae-config | grep "kubesphere:" | awk '{print $2}'
  register: kubesphere_version
  ignore_errors: True


- name: ks-logging | Changing logging index
  shell: >
    index_name=logstash-$(date  +"%Y.%m.%d" -d  "-{{ item }} days");
    index_alias=ks-logstash-log-$(date  +"%Y.%m.%d" -d  "-{{ item }} days");
    curl -X POST "$({{ bin_dir }}/kubectl get svc elasticsearch-logging-data  -n kubesphere-logging-system -o=jsonpath='{.spec.clusterIP}'):9200/_aliases" 
    -H 'Content-Type: application/json' 
    -d '{ "actions" : [ { "add" : { "index" : "'"$index_name"'", "alias" : "'"$index_alias"'" } } ] }'
  with_sequence: start=0 end=6 stride=1
  when:
    - elasticsearch_logging_data_svc.stdout.find("elasticsearch-logging-data") != -1
    - kubesphere_version.stdout == "2.0.0"
  ignore_errors: True


- name: ks-logging | Checking fluent-bit-output-config
  shell: >
    {{ bin_dir }}/kubectl get cm -n kubesphere-logging-system
  register: check_fluent_bit_config_result
  ignore_errors: True


- name: ks-logging | Generate fluent-bit-output-config
  shell: >
    sed "s/<UPDATETIME>/`date +"%Y-%m-%dT%H:%M:%SZ"`/" {{ kubesphere_dir }}/logging/fluent-bit-outputs.template > {{ kubesphere_dir }}/logging/fluent-bit-outputs.config 


- name: ks-logging | Fetching fluent-bit-output-config
  shell: >
    {{ bin_dir }}/kubectl get  cm -n kubesphere-logging-system fluent-bit-output-config -o=jsonpath='{.data.outputs}' > {{ kubesphere_dir }}/logging/fluent-bit-outputs.config.bak
  when: 
    - check_fluent_bit_config_result.stdout.find("fluent-bit-output-config") != -1
    - kubesphere_version.stdout == "2.0.0"


- name: ks-logging | Checking fluent-bit-output-config
  shell: >
    chmod +x {{ kubesphere_dir }}/logging/FluentBitOutputsConfig.py &&
    {{ kubesphere_dir }}/logging/FluentBitOutputsConfig.py {{ kubesphere_dir }}/logging/fluent-bit-outputs.config.bak 
    {{ kubesphere_dir }}/logging/fluent-bit-outputs.config
  when: 
    - check_fluent_bit_config_result.stdout.find("fluent-bit-output-config") != -1
    - kubesphere_version.stdout == "2.0.0"


- name: ks-logging | Deleting old fluent-bit-output-config
  shell: >
    {{ bin_dir }}/kubectl delete  cm -n kubesphere-logging-system fluent-bit-output-config
  when: 
    - check_fluent_bit_config_result.stdout.find("fluent-bit-output-config") != -1
    - kubesphere_version.stdout == "2.0.0"


- name: ks-logging | Create fluentbit-config
  shell: >
    {{ bin_dir }}/kubectl create configmap fluent-bit-output-config -n kubesphere-logging-system  
    --from-file=outputs={{ kubesphere_dir }}/logging/fluent-bit-outputs.config
  register: import
  failed_when: "import.stderr and 'already exists' not in import.stderr"


- name: ks-logging | Checking fluentbit crd
  shell: >
    {{ bin_dir }}/kubectl get FluentBit -n kubesphere-logging-system
  register: check_fluent_bit_crd_result
  ignore_errors: True


- name: ks-logging | Fetching fluent-bit-crd
  shell: >
    {{ bin_dir }}/kubectl get FluentBit fluent-bit -n kubesphere-logging-system --export -o json > {{ kubesphere_dir }}/logging/fluentbit-crd.json
  when: 
    - check_fluent_bit_crd_result.stdout.find("fluent-bit") != -1
    - kubesphere_version.stdout == "2.0.0"


- name: ks-logging | Checking fluent-bit-crd
  shell: >
    chmod +x {{ kubesphere_dir }}/logging/FluentBitCrd.py &&
    {{ kubesphere_dir }}/logging/FluentBitCrd.py {{ kubesphere_dir }}/logging/fluentbit-crd.json
    {{ kubesphere_dir }}/logging/fluentbit-crd-patch.json
  when: 
    - check_fluent_bit_crd_result.stdout.find("fluent-bit") != -1
    - kubesphere_version.stdout == "2.0.0"


- name: ks-logging | Patching fluent-bit-crd
  shell: >
    {{ bin_dir }}/kubectl patch FluentBit fluent-bit -n kubesphere-logging-system --type merge --patch "$(cat {{ kubesphere_dir }}/logging/fluentbit-crd-patch.json)"
  when: 
    - check_fluent_bit_crd_result.stdout.find("fluent-bit") != -1
    - kubesphere_version.stdout == "2.0.0"


- name: ks-logging | Deploy logging-fluentbit-operator
  shell: >
    {{ bin_dir }}/helm upgrade --install logging-fluentbit-operator 
    {{ kubesphere_dir }}/logging/fluentbit-operator-0.1.0.tgz
    -f {{ kubesphere_dir }}/logging/custom-values-fluentbit-operator.yaml
    --namespace kubesphere-logging-system


- name: ks-logging | Create fluentbit-crd
  shell: "{{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/logging/fluentbit-crd.yaml"
  register: import
  until: import is succeeded
  retries: 5
  delay: 10
  when: 
    - check_fluent_bit_crd_result.stdout.find("fluent-bit") == -1


- name: ks-logging | Deploy elasticsearch-plugins
  shell: >
    {{ bin_dir }}/helm upgrade --install elasticsearch-logging-plugins
    {{ kubesphere_dir }}/logging/nginx-1.0.0.tgz  
    -f {{ kubesphere_dir }}/logging/custom-values-elasticsearch-plugins.yaml
    --namespace kubesphere-logging-system
  when:
    - external_es_url is not defined
    - external_es_port is not defined


- name: ks-logging | Deploy elasticsearch-logging
  shell: >
    {{ bin_dir }}/helm upgrade --install elasticsearch-logging 
    {{ kubesphere_dir }}/logging/elasticsearch-1.22.1.tgz
    -f {{ kubesphere_dir }}/logging/custom-values-elasticsearch.yaml
    --namespace kubesphere-logging-system
  when:
    - external_es_url is not defined
    - external_es_port is not defined


- name: ks-logging | Deploy elasticsearch-logging-curator
  shell: >
    {{ bin_dir }}/helm upgrade --install elasticsearch-logging-curator 
    {{ kubesphere_dir }}/logging/elasticsearch-curator-1.3.3.tgz  
    -f {{ kubesphere_dir }}/logging/custom-values-elasticsearch-curator.yaml
    --namespace kubesphere-logging-system


- name: ks-logging | Deploy elasticsearch-logging-kibana
  shell: >
    {{ bin_dir }}/helm upgrade --install elasticsearch-logging-kibana 
    {{ kubesphere_dir }}/logging/kibana-2.2.1.tgz  
    -f {{ kubesphere_dir }}/logging/custom-values-kibana.yaml
    --namespace kubesphere-logging-system
  when:
    - kibana_enable == true  


- import_tasks: logsidecar.yaml
  when:
    - ks_logsidecar_injector_enable == true 
  
