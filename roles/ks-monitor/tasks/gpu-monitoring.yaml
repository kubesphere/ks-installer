---
- name: Monitoring | Getting GPU monitoring installation files
  copy:
    src: "{{ item }}"
    dest: "{{ kubesphere_dir }}/"
  loop:
    - "gpu-monitoring"
  when:
    - monitoring.gpu is defined
    - monitoring.gpu.nvidia_dcgm_exporter is defined
    - monitoring.gpu.nvidia_dcgm_exporter.enabled == true

- name: Monitoring | Creating GPU monitoring manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/{{ item.path }}/{{ item.file }}"
  with_items:
    - { path: gpu-monitoring/nvidia-dcgm-exporter, file: custom-values-gpu-monitoring.yaml }
  when:
    - monitoring.gpu is defined
    - monitoring.gpu.nvidia_dcgm_exporter is defined
    - monitoring.gpu.nvidia_dcgm_exporter.enabled == true

- name: Monitoring | Labeling GPU nodes
  shell: >
   {{ bin_dir }}/kubectl get nodes -o go-template --template="{{ '{{' }}range .items{{ '}}' }}{{ '{{' }} \$nvidiaFlag := index .status.allocatable \"nvidia.com/gpu\"{{ '}}' }}{{ '{{' }}if \$nvidiaFlag {{ '}}' }}{{ '{{' }} printf \"%s\n\" .metadata.name{{ '}}' }}{{ '{{' }}end{{ '}}' }}{{ '{{' }}end{{ '}}' }}"  | xargs -I {} {{ bin_dir }}/kubectl label node {} nvidia.com/gpu.present=true --overwrite
  when:
    - monitoring.gpu is defined
    - monitoring.gpu.nvidia_dcgm_exporter is defined
    - monitoring.gpu.nvidia_dcgm_exporter.enabled == true

- name: Monitoring | Installing nvidia dcgm exporter
  shell: >
    {{ bin_dir }}/helm upgrade --install gpu-dcgm-exporter
    {{ kubesphere_dir }}/gpu-monitoring/nvidia-dcgm-exporter
    --namespace kubesphere-monitoring-system
    --create-namespace
    -f {{ kubesphere_dir }}/gpu-monitoring/nvidia-dcgm-exporter/custom-values-gpu-monitoring.yaml
  when:
    - monitoring.gpu is defined
    - monitoring.gpu.nvidia_dcgm_exporter is defined
    - monitoring.gpu.nvidia_dcgm_exporter.enabled == true
  register: import_exporter
  failed_when: "import_exporter.stderr and 'Warning' not in import_exporter.stderr"
  until: import_exporter is succeeded
  retries: 5
  delay: 5

- name: Monitoring | Installing custom gpu dashboards
  shell: >
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/gpu-monitoring/gpu-dashboards/  --force
  when:
    - monitoring.gpu is defined
    - monitoring.gpu.nvidia_dcgm_exporter is defined
    - monitoring.gpu.nvidia_dcgm_exporter.enabled == true